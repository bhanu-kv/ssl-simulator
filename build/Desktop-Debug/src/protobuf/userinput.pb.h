// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: userinput.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_userinput_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_userinput_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "robot.pb.h"
#include "command.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_userinput_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_userinput_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_userinput_2eproto;
namespace amun {
class UserInput;
class UserInputDefaultTypeInternal;
extern UserInputDefaultTypeInternal _UserInput_default_instance_;
}  // namespace amun
PROTOBUF_NAMESPACE_OPEN
template<> ::amun::UserInput* Arena::CreateMaybeMessage<::amun::UserInput>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace amun {

// ===================================================================

class UserInput PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:amun.UserInput) */ {
 public:
  inline UserInput() : UserInput(nullptr) {};
  virtual ~UserInput();

  UserInput(const UserInput& from);
  UserInput(UserInput&& from) noexcept
    : UserInput() {
    *this = ::std::move(from);
  }

  inline UserInput& operator=(const UserInput& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserInput& operator=(UserInput&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UserInput& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserInput* internal_default_instance() {
    return reinterpret_cast<const UserInput*>(
               &_UserInput_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(UserInput& a, UserInput& b) {
    a.Swap(&b);
  }
  inline void Swap(UserInput* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserInput* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UserInput* New() const final {
    return CreateMaybeMessage<UserInput>(nullptr);
  }

  UserInput* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UserInput>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UserInput& from);
  void MergeFrom(const UserInput& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserInput* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "amun.UserInput";
  }
  protected:
  explicit UserInput(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_userinput_2eproto);
    return ::descriptor_table_userinput_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRadioCommandFieldNumber = 1,
    kMoveCommandFieldNumber = 2,
  };
  // repeated .robot.RadioCommand radio_command = 1;
  int radio_command_size() const;
  private:
  int _internal_radio_command_size() const;
  public:
  void clear_radio_command();
  ::robot::RadioCommand* mutable_radio_command(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::robot::RadioCommand >*
      mutable_radio_command();
  private:
  const ::robot::RadioCommand& _internal_radio_command(int index) const;
  ::robot::RadioCommand* _internal_add_radio_command();
  public:
  const ::robot::RadioCommand& radio_command(int index) const;
  ::robot::RadioCommand* add_radio_command();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::robot::RadioCommand >&
      radio_command() const;

  // repeated .amun.RobotMoveCommand move_command = 2;
  int move_command_size() const;
  private:
  int _internal_move_command_size() const;
  public:
  void clear_move_command();
  ::amun::RobotMoveCommand* mutable_move_command(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::amun::RobotMoveCommand >*
      mutable_move_command();
  private:
  const ::amun::RobotMoveCommand& _internal_move_command(int index) const;
  ::amun::RobotMoveCommand* _internal_add_move_command();
  public:
  const ::amun::RobotMoveCommand& move_command(int index) const;
  ::amun::RobotMoveCommand* add_move_command();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::amun::RobotMoveCommand >&
      move_command() const;

  // @@protoc_insertion_point(class_scope:amun.UserInput)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::robot::RadioCommand > radio_command_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::amun::RobotMoveCommand > move_command_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_userinput_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UserInput

// repeated .robot.RadioCommand radio_command = 1;
inline int UserInput::_internal_radio_command_size() const {
  return radio_command_.size();
}
inline int UserInput::radio_command_size() const {
  return _internal_radio_command_size();
}
inline ::robot::RadioCommand* UserInput::mutable_radio_command(int index) {
  // @@protoc_insertion_point(field_mutable:amun.UserInput.radio_command)
  return radio_command_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::robot::RadioCommand >*
UserInput::mutable_radio_command() {
  // @@protoc_insertion_point(field_mutable_list:amun.UserInput.radio_command)
  return &radio_command_;
}
inline const ::robot::RadioCommand& UserInput::_internal_radio_command(int index) const {
  return radio_command_.Get(index);
}
inline const ::robot::RadioCommand& UserInput::radio_command(int index) const {
  // @@protoc_insertion_point(field_get:amun.UserInput.radio_command)
  return _internal_radio_command(index);
}
inline ::robot::RadioCommand* UserInput::_internal_add_radio_command() {
  return radio_command_.Add();
}
inline ::robot::RadioCommand* UserInput::add_radio_command() {
  // @@protoc_insertion_point(field_add:amun.UserInput.radio_command)
  return _internal_add_radio_command();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::robot::RadioCommand >&
UserInput::radio_command() const {
  // @@protoc_insertion_point(field_list:amun.UserInput.radio_command)
  return radio_command_;
}

// repeated .amun.RobotMoveCommand move_command = 2;
inline int UserInput::_internal_move_command_size() const {
  return move_command_.size();
}
inline int UserInput::move_command_size() const {
  return _internal_move_command_size();
}
inline ::amun::RobotMoveCommand* UserInput::mutable_move_command(int index) {
  // @@protoc_insertion_point(field_mutable:amun.UserInput.move_command)
  return move_command_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::amun::RobotMoveCommand >*
UserInput::mutable_move_command() {
  // @@protoc_insertion_point(field_mutable_list:amun.UserInput.move_command)
  return &move_command_;
}
inline const ::amun::RobotMoveCommand& UserInput::_internal_move_command(int index) const {
  return move_command_.Get(index);
}
inline const ::amun::RobotMoveCommand& UserInput::move_command(int index) const {
  // @@protoc_insertion_point(field_get:amun.UserInput.move_command)
  return _internal_move_command(index);
}
inline ::amun::RobotMoveCommand* UserInput::_internal_add_move_command() {
  return move_command_.Add();
}
inline ::amun::RobotMoveCommand* UserInput::add_move_command() {
  // @@protoc_insertion_point(field_add:amun.UserInput.move_command)
  return _internal_add_move_command();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::amun::RobotMoveCommand >&
UserInput::move_command() const {
  // @@protoc_insertion_point(field_list:amun.UserInput.move_command)
  return move_command_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace amun

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_userinput_2eproto
